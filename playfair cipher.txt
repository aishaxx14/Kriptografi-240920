import tkinter as tk
from tkinter import messagebox

def generate_playfair_matrix(key):
    key = key.upper().replace("J", "I")
    matrix = []
    seen = set()
    for char in key + "ABCDEFGHIKLMNOPQRSTUVWXYZ":
        if char not in seen:
            seen.add(char)
            matrix.append(char)
    return [matrix[i:i+5] for i in range(0, 25, 5)]

def find_position(matrix, char):
    for i, row in enumerate(matrix):
        if char in row:
            return i, row.index(char)
    return -1, -1

def playfair_cipher(text, key, mode):
    matrix = generate_playfair_matrix(key)
    text = text.upper().replace("J", "I")
    if len(text) % 2 != 0:
        text += 'X'
    result = ""

    for i in range(0, len(text), 2):
        a, b = text[i], text[i+1]
        row1, col1 = find_position(matrix, a)
        row2, col2 = find_position(matrix, b)

        if row1 == row2:
            if mode == "encrypt":
                result += matrix[row1][(col1+1)%5] + matrix[row2][(col2+1)%5]
            else:
                result += matrix[row1][(col1-1)%5] + matrix[row2][(col2-1)%5]
        elif col1 == col2:
            if mode == "encrypt":
                result += matrix[(row1+1)%5][col1] + matrix[(row2+1)%5][col2]
            else:
                result += matrix[(row1-1)%5][col1] + matrix[(row2-1)%5][col2]
        else:
            result += matrix[row1][col2] + matrix[row2][col1]

    return result

def process_text():
    text = text_input.get("1.0", tk.END).strip()
    key = key_entry.get().strip()
    mode = mode_var.get()

    if len(text) < 12:
        messagebox.showerror("Error", "Teks harus memiliki panjang minimal 12 karakter.")
        return

    if not key:
        messagebox.showerror("Error", "Kunci tidak boleh kosong.")
        return

    result = playfair_cipher(text, key, mode)
    result_text.delete("1.0", tk.END)
    result_text.insert(tk.END, result)

root = tk.Tk()
root.title("Playfair Cipher")
root.geometry("400x500")

tk.Label(root, text="Masukkan teks (min. 12 karakter):").pack(pady=5)
text_input = tk.Text(root, height=5)
text_input.pack(pady=5)

tk.Label(root, text="Masukkan kunci:").pack(pady=5)
key_entry = tk.Entry(root)
key_entry.pack(pady=5)

mode_var = tk.StringVar(value="encrypt")
tk.Radiobutton(root, text="Enkripsi", variable=mode_var, value="encrypt").pack()
tk.Radiobutton(root, text="Dekripsi", variable=mode_var, value="decrypt").pack()

process_button = tk.Button(root, text="Proses", command=process_text)
process_button.pack(pady=10)

tk.Label(root, text="Hasil:").pack(pady=5)
result_text = tk.Text(root, height=5)
result_text.pack(pady=5)

root.mainloop()
